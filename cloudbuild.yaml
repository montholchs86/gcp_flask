steps:
  # Step 1: Authenticate with Docker Hub (optional, for private repositories)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Authenticate with Docker Hub'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo 'password1' | docker login -u 'monthol.chang@gmail.com' --password-stdin

  # Step 2: Build the Docker image for a specific platform
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker image'
    args:
      - 'build'
      - '--platform=linux/amd64'
      - '-t'
      - 'montholch86/flask-app:latest'
      - .

  # Step 3: Push the Docker image to Docker Hub
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker image'
    args:
      - 'push'
      - 'montholch86/flask-app:latest'

  # Step 4. Pull the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Pull Docker image'
    args:
      - 'pull'
      - 'montholch86/flask-app:latest'

  # Step 5: Stop and remove the existing container if it exists
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Stop and Remove Docker container'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sudo docker stop flask-app || true
        sudo docker rm flask-app || true

  # Step 6: Run the Docker container
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Run Docker container'
    entrypoint: 'bash'
    args:
      - '-c'
      - | 
        sudo docker run -d --name flask-app -p 4000:4000 montholch86/flask-app:latest

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
